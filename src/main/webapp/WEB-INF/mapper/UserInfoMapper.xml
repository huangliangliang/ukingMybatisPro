<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uking.mbpro.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.uking.mbpro.bean.UserInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="employee_no" jdbcType="VARCHAR" property="employeeNo" />
    <result column="employee_type" jdbcType="VARCHAR" property="employeeType" />
    <result column="employee_state" jdbcType="INTEGER" property="employeeState" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="department_leader" jdbcType="BIT" property="departmentLeader" />
    <result column="department_index" jdbcType="INTEGER" property="departmentIndex" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, employee_no, employee_type, employee_state, email, password, telephone, 
    department_id, department_leader, department_index, tenant_id, create_time, modified_time, 
    record_status
  </sql>
  <select id="selectByExample" parameterType="com.uking.mbpro.bean.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="loginByEmployee" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_info
    where employee_no = #{employee_no,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.uking.mbpro.bean.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uking.mbpro.bean.UserInfo">
    insert into user_info (id, name, employee_no, 
      employee_type, employee_state, email, 
      password, telephone, department_id, 
      department_leader, department_index, tenant_id, 
      create_time, modified_time, record_status
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{employeeNo,jdbcType=VARCHAR}, 
      #{employeeType,jdbcType=VARCHAR}, #{employeeState,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, 
      #{departmentLeader,jdbcType=BIT}, #{departmentIndex,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, #{recordStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uking.mbpro.bean.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="employeeNo != null">
        employee_no,
      </if>
      <if test="employeeType != null">
        employee_type,
      </if>
      <if test="employeeState != null">
        employee_state,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentLeader != null">
        department_leader,
      </if>
      <if test="departmentIndex != null">
        department_index,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="employeeNo != null">
        #{employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="employeeType != null">
        #{employeeType,jdbcType=VARCHAR},
      </if>
      <if test="employeeState != null">
        #{employeeState,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentLeader != null">
        #{departmentLeader,jdbcType=BIT},
      </if>
      <if test="departmentIndex != null">
        #{departmentIndex,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uking.mbpro.bean.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNo != null">
        employee_no = #{record.employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeType != null">
        employee_type = #{record.employeeType,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeState != null">
        employee_state = #{record.employeeState,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentLeader != null">
        department_leader = #{record.departmentLeader,jdbcType=BIT},
      </if>
      <if test="record.departmentIndex != null">
        department_index = #{record.departmentIndex,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      employee_no = #{record.employeeNo,jdbcType=VARCHAR},
      employee_type = #{record.employeeType,jdbcType=VARCHAR},
      employee_state = #{record.employeeState,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR},
      department_leader = #{record.departmentLeader,jdbcType=BIT},
      department_index = #{record.departmentIndex,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      record_status = #{record.recordStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uking.mbpro.bean.UserInfo">
    update user_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="employeeNo != null">
        employee_no = #{employeeNo,jdbcType=VARCHAR},
      </if>
      <if test="employeeType != null">
        employee_type = #{employeeType,jdbcType=VARCHAR},
      </if>
      <if test="employeeState != null">
        employee_state = #{employeeState,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentLeader != null">
        department_leader = #{departmentLeader,jdbcType=BIT},
      </if>
      <if test="departmentIndex != null">
        department_index = #{departmentIndex,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uking.mbpro.bean.UserInfo">
    update user_info
    set name = #{name,jdbcType=VARCHAR},
      employee_no = #{employeeNo,jdbcType=VARCHAR},
      employee_type = #{employeeType,jdbcType=VARCHAR},
      employee_state = #{employeeState,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      department_leader = #{departmentLeader,jdbcType=BIT},
      department_index = #{departmentIndex,jdbcType=INTEGER},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>